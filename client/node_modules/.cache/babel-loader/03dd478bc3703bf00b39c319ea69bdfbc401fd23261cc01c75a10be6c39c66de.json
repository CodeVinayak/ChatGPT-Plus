{"ast":null,"code":"import{useEffect,useRef,useCallback}from'react';import ContentEditable from'react-contenteditable';import'./PromptInput.css';import{jsx as _jsx}from\"react/jsx-runtime\";var PromptInput=function PromptInput(_ref){var prompt=_ref.prompt,onSubmit=_ref.onSubmit,updatePrompt=_ref.updatePrompt;var checkKeyPress=useCallback(function(e){if(e.key==='Enter'){e.preventDefault();if(e.ctrlKey||e.shiftKey){document.execCommand('insertHTML',false,'<br/><br/>');}else{onSubmit();}}// eslint-disable-next-line react-hooks/exhaustive-deps\n},[prompt]);var contentEditableRef=useRef(null);useEffect(function(){window.addEventListener(\"keydown\",checkKeyPress);return function(){window.removeEventListener(\"keydown\",checkKeyPress);};},[checkKeyPress]);return/*#__PURE__*/_jsx(ContentEditable,{innerRef:contentEditableRef,html:prompt,disabled:false,id:\"prompt-input\",className:\"prompt-input\",onChange:function onChange(event){return updatePrompt(event.target.value);}});};export default PromptInput;","map":{"version":3,"names":["useEffect","useRef","useCallback","ContentEditable","PromptInput","prompt","onSubmit","updatePrompt","checkKeyPress","e","key","preventDefault","ctrlKey","shiftKey","document","execCommand","contentEditableRef","window","addEventListener","removeEventListener","event","target","value"],"sources":["D:/Coding/Github Local/ChatGPT Plus/client/src/components/PromptInput/PromptInput.tsx"],"sourcesContent":["import { useEffect, useRef, useCallback } from 'react';\nimport ContentEditable from 'react-contenteditable';\nimport './PromptInput.css';\n\ninterface PromptInputProps {\n  prompt: string;\n  onSubmit: () => void;\n  updatePrompt: (prompt: string) => void;\n}\n\nconst PromptInput: React.FC<PromptInputProps> = ({ prompt, onSubmit, updatePrompt }) => {\n  const checkKeyPress = useCallback((e: KeyboardEvent) => {\n    if (e.key === 'Enter') {\n      e.preventDefault();\n      if (e.ctrlKey || e.shiftKey) {\n        document.execCommand('insertHTML', false, '<br/><br/>');\n      } else {\n        onSubmit();\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [prompt]);\n\n  const contentEditableRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    window.addEventListener(\"keydown\", checkKeyPress);\n    return () => {\n      window.removeEventListener(\"keydown\", checkKeyPress);\n    };\n  }, [checkKeyPress]);\n\n  return (\n    <ContentEditable\n      innerRef={contentEditableRef}\n      html={prompt}\n      disabled={false}\n      id=\"prompt-input\"\n      className=\"prompt-input\"\n      onChange={(event) => updatePrompt(event.target.value)}\n    />\n  );\n};\n\nexport default PromptInput;\n"],"mappings":"AAAA,OAASA,SAAS,CAAEC,MAAM,CAAEC,WAAW,KAAQ,OAAO,CACtD,MAAOC,gBAAe,KAAM,uBAAuB,CACnD,MAAO,mBAAmB,CAAC,2CAQ3B,GAAMC,YAAuC,CAAG,QAA1CA,YAAuC,MAA2C,IAArCC,OAAM,MAANA,MAAM,CAAEC,QAAQ,MAARA,QAAQ,CAAEC,YAAY,MAAZA,YAAY,CAC/E,GAAMC,cAAa,CAAGN,WAAW,CAAC,SAACO,CAAgB,CAAK,CACtD,GAAIA,CAAC,CAACC,GAAG,GAAK,OAAO,CAAE,CACrBD,CAAC,CAACE,cAAc,EAAE,CAClB,GAAIF,CAAC,CAACG,OAAO,EAAIH,CAAC,CAACI,QAAQ,CAAE,CAC3BC,QAAQ,CAACC,WAAW,CAAC,YAAY,CAAE,KAAK,CAAE,YAAY,CAAC,CACzD,CAAC,IAAM,CACLT,QAAQ,EAAE,CACZ,CACF,CACA;AACF,CAAC,CAAE,CAACD,MAAM,CAAC,CAAC,CAEZ,GAAMW,mBAAkB,CAAGf,MAAM,CAAiB,IAAI,CAAC,CAEvDD,SAAS,CAAC,UAAM,CACdiB,MAAM,CAACC,gBAAgB,CAAC,SAAS,CAAEV,aAAa,CAAC,CACjD,MAAO,WAAM,CACXS,MAAM,CAACE,mBAAmB,CAAC,SAAS,CAAEX,aAAa,CAAC,CACtD,CAAC,CACH,CAAC,CAAE,CAACA,aAAa,CAAC,CAAC,CAEnB,mBACE,KAAC,eAAe,EACd,QAAQ,CAAEQ,kBAAmB,CAC7B,IAAI,CAAEX,MAAO,CACb,QAAQ,CAAE,KAAM,CAChB,EAAE,CAAC,cAAc,CACjB,SAAS,CAAC,cAAc,CACxB,QAAQ,CAAE,kBAACe,KAAK,QAAKb,aAAY,CAACa,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,EAAC,EACtD,CAEN,CAAC,CAED,cAAelB,YAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}