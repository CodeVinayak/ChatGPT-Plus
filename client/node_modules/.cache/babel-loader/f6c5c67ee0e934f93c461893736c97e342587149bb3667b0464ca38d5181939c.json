{"ast":null,"code":"var _jsxFileName = \"D:\\\\Coding\\\\Github Local\\\\ChatGPT Plus\\\\client\\\\src\\\\components\\\\PromptInput\\\\PromptInput.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useRef, useCallback } from 'react';\nimport ContentEditable from 'react-contenteditable';\nimport './PromptInput.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PromptInput = _ref => {\n  _s();\n  let {\n    prompt,\n    onSubmit,\n    updatePrompt\n  } = _ref;\n  const checkKeyPress = useCallback(e => {\n    if (e.key === 'Enter') {\n      e.preventDefault();\n      if (e.ctrlKey || e.shiftKey) {\n        document.execCommand('insertHTML', false, '<br/><br/>');\n      } else {\n        onSubmit();\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [prompt]);\n  const contentEditableRef = useRef(null);\n  useEffect(() => {\n    window.addEventListener(\"keydown\", checkKeyPress);\n    return () => {\n      window.removeEventListener(\"keydown\", checkKeyPress);\n    };\n  }, [checkKeyPress]);\n  return /*#__PURE__*/_jsxDEV(ContentEditable, {\n    innerRef: contentEditableRef,\n    html: prompt,\n    disabled: false,\n    id: \"prompt-input\",\n    className: \"prompt-input\",\n    onChange: event => updatePrompt(event.target.value)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(PromptInput, \"cGyL/KMRo1DzlFw+LpreWHrEiF8=\");\n_c = PromptInput;\nexport default PromptInput;\nvar _c;\n$RefreshReg$(_c, \"PromptInput\");","map":{"version":3,"names":["useEffect","useRef","useCallback","ContentEditable","PromptInput","prompt","onSubmit","updatePrompt","checkKeyPress","e","key","preventDefault","ctrlKey","shiftKey","document","execCommand","contentEditableRef","window","addEventListener","removeEventListener","event","target","value"],"sources":["D:/Coding/Github Local/ChatGPT Plus/client/src/components/PromptInput/PromptInput.tsx"],"sourcesContent":["import { useEffect, useRef, useCallback } from 'react';\nimport ContentEditable from 'react-contenteditable';\nimport './PromptInput.css';\n\ninterface PromptInputProps {\n  prompt: string;\n  onSubmit: () => void;\n  updatePrompt: (prompt: string) => void;\n}\n\nconst PromptInput: React.FC<PromptInputProps> = ({ prompt, onSubmit, updatePrompt }) => {\n  const checkKeyPress = useCallback((e: KeyboardEvent) => {\n    if (e.key === 'Enter') {\n      e.preventDefault();\n      if (e.ctrlKey || e.shiftKey) {\n        document.execCommand('insertHTML', false, '<br/><br/>');\n      } else {\n        onSubmit();\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [prompt]);\n\n  const contentEditableRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    window.addEventListener(\"keydown\", checkKeyPress);\n    return () => {\n      window.removeEventListener(\"keydown\", checkKeyPress);\n    };\n  }, [checkKeyPress]);\n\n  return (\n    <ContentEditable\n      innerRef={contentEditableRef}\n      html={prompt}\n      disabled={false}\n      id=\"prompt-input\"\n      className=\"prompt-input\"\n      onChange={(event) => updatePrompt(event.target.value)}\n    />\n  );\n};\n\nexport default PromptInput;\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,MAAM,EAAEC,WAAW,QAAQ,OAAO;AACtD,OAAOC,eAAe,MAAM,uBAAuB;AACnD,OAAO,mBAAmB;AAAC;AAQ3B,MAAMC,WAAuC,GAAG,QAAwC;EAAA;EAAA,IAAvC;IAAEC,MAAM;IAAEC,QAAQ;IAAEC;EAAa,CAAC;EACjF,MAAMC,aAAa,GAAGN,WAAW,CAAEO,CAAgB,IAAK;IACtD,IAAIA,CAAC,CAACC,GAAG,KAAK,OAAO,EAAE;MACrBD,CAAC,CAACE,cAAc,EAAE;MAClB,IAAIF,CAAC,CAACG,OAAO,IAAIH,CAAC,CAACI,QAAQ,EAAE;QAC3BC,QAAQ,CAACC,WAAW,CAAC,YAAY,EAAE,KAAK,EAAE,YAAY,CAAC;MACzD,CAAC,MAAM;QACLT,QAAQ,EAAE;MACZ;IACF;IACA;EACF,CAAC,EAAE,CAACD,MAAM,CAAC,CAAC;EAEZ,MAAMW,kBAAkB,GAAGf,MAAM,CAAiB,IAAI,CAAC;EAEvDD,SAAS,CAAC,MAAM;IACdiB,MAAM,CAACC,gBAAgB,CAAC,SAAS,EAAEV,aAAa,CAAC;IACjD,OAAO,MAAM;MACXS,MAAM,CAACE,mBAAmB,CAAC,SAAS,EAAEX,aAAa,CAAC;IACtD,CAAC;EACH,CAAC,EAAE,CAACA,aAAa,CAAC,CAAC;EAEnB,oBACE,QAAC,eAAe;IACd,QAAQ,EAAEQ,kBAAmB;IAC7B,IAAI,EAAEX,MAAO;IACb,QAAQ,EAAE,KAAM;IAChB,EAAE,EAAC,cAAc;IACjB,SAAS,EAAC,cAAc;IACxB,QAAQ,EAAGe,KAAK,IAAKb,YAAY,CAACa,KAAK,CAACC,MAAM,CAACC,KAAK;EAAE;IAAA;IAAA;IAAA;EAAA,QACtD;AAEN,CAAC;AAAC,GAhCIlB,WAAuC;AAAA,KAAvCA,WAAuC;AAkC7C,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}