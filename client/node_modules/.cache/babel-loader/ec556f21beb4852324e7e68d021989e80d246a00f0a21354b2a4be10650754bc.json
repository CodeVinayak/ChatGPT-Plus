{"ast":null,"code":"import React,{useEffect,useRef}from'react';import ChatGptImg from'../../img/chatgpt.png';import MyImg from'../../img/me.png';import ReactMarkdown from'react-markdown';import hljs from'highlight.js';import'./PromptResponseList.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var PromptResponseList=function PromptResponseList(_ref){var responseList=_ref.responseList;var responseListRef=useRef(null);useEffect(function(){hljs.highlightAll();});useEffect(function(){hljs.highlightAll();},[responseList]);return/*#__PURE__*/_jsx(\"div\",{className:\"prompt-response-list\",ref:responseListRef,children:responseList.map(function(responseData){var _responseData$respons;return/*#__PURE__*/_jsxs(\"div\",{className:\"response-container \"+(responseData.selfFlag?'my-question':'chatgpt-response'),children:[/*#__PURE__*/_jsx(\"img\",{className:\"avatar-image\",src:responseData.selfFlag?MyImg:ChatGptImg,alt:\"avatar\"}),/*#__PURE__*/_jsxs(\"div\",{className:(responseData.error?'error-response ':'')+\"prompt-content\",id:responseData.id,children:[responseData.image&&/*#__PURE__*/_jsx(\"img\",{src:responseData.image,className:\"ai-image\",alt:\"generated ai\"}),responseData.response&&/*#__PURE__*/_jsx(ReactMarkdown,{children:(_responseData$respons=responseData.response)!==null&&_responseData$respons!==void 0?_responseData$respons:'',components:{code:function code(_ref2){var className=_ref2.className,children=_ref2.children;return/*#__PURE__*/_jsx(\"code\",{className:className,children:children});}}})]})]},responseData.id);})});};export default PromptResponseList;","map":{"version":3,"names":["React","useEffect","useRef","ChatGptImg","MyImg","ReactMarkdown","hljs","PromptResponseList","responseList","responseListRef","highlightAll","map","responseData","selfFlag","error","id","image","response","code","className","children"],"sources":["D:/Coding/Github Local/ChatGPT Plus/client/src/components/PromptResponseList/PromptResponseList.tsx"],"sourcesContent":["import React, {FC, useEffect, useRef} from 'react';\nimport ChatGptImg from '../../img/chatgpt.png';\nimport MyImg from '../../img/me.png';\nimport ReactMarkdown from 'react-markdown';\nimport {ResponseInterface} from \"./response-interface\";\nimport hljs from 'highlight.js';\nimport './PromptResponseList.css';\n\ninterface PromptResponseListProps {\n  responseList: ResponseInterface[];\n}\n\nconst PromptResponseList: FC<PromptResponseListProps> = ({ responseList }) => {\n  const responseListRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    hljs.highlightAll();\n  })\n\n  useEffect(() => {\n    hljs.highlightAll();\n  }, [responseList]);\n\n  return (\n    <div className=\"prompt-response-list\" ref={responseListRef}>\n      {responseList.map((responseData) => (\n        <div className={\"response-container \" + (responseData.selfFlag ? 'my-question' : 'chatgpt-response')} key={responseData.id}>\n          <img className=\"avatar-image\" src={responseData.selfFlag ? MyImg : ChatGptImg} alt=\"avatar\"/>\n          <div className={(responseData.error ? 'error-response ' : '') + \"prompt-content\"} id={responseData.id}>\n            { responseData.image &&\n                <img src={responseData.image} className=\"ai-image\" alt=\"generated ai\"/>\n            }\n            { responseData.response &&\n              <ReactMarkdown\n                children={responseData.response ?? ''}\n                components={{\n                  code({className, children}) {\n                    return(\n                      <code className={className}>\n                        {children}\n                      </code>\n                    )\n                  }\n                }}\n              />\n            }\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default PromptResponseList;\n"],"mappings":"AAAA,MAAOA,MAAK,EAAOC,SAAS,CAAEC,MAAM,KAAO,OAAO,CAClD,MAAOC,WAAU,KAAM,uBAAuB,CAC9C,MAAOC,MAAK,KAAM,kBAAkB,CACpC,MAAOC,cAAa,KAAM,gBAAgB,CAE1C,MAAOC,KAAI,KAAM,cAAc,CAC/B,MAAO,0BAA0B,CAAC,wFAMlC,GAAMC,mBAA+C,CAAG,QAAlDA,mBAA+C,MAAyB,IAAnBC,aAAY,MAAZA,YAAY,CACrE,GAAMC,gBAAe,CAAGP,MAAM,CAAiB,IAAI,CAAC,CAEpDD,SAAS,CAAC,UAAM,CACdK,IAAI,CAACI,YAAY,EAAE,CACrB,CAAC,CAAC,CAEFT,SAAS,CAAC,UAAM,CACdK,IAAI,CAACI,YAAY,EAAE,CACrB,CAAC,CAAE,CAACF,YAAY,CAAC,CAAC,CAElB,mBACE,YAAK,SAAS,CAAC,sBAAsB,CAAC,GAAG,CAAEC,eAAgB,UACxDD,YAAY,CAACG,GAAG,CAAC,SAACC,YAAY,+CAC7B,aAAK,SAAS,CAAE,qBAAqB,EAAIA,YAAY,CAACC,QAAQ,CAAG,aAAa,CAAG,kBAAkB,CAAE,wBACnG,YAAK,SAAS,CAAC,cAAc,CAAC,GAAG,CAAED,YAAY,CAACC,QAAQ,CAAGT,KAAK,CAAGD,UAAW,CAAC,GAAG,CAAC,QAAQ,EAAE,cAC7F,aAAK,SAAS,CAAE,CAACS,YAAY,CAACE,KAAK,CAAG,iBAAiB,CAAG,EAAE,EAAI,gBAAiB,CAAC,EAAE,CAAEF,YAAY,CAACG,EAAG,WAClGH,YAAY,CAACI,KAAK,eAChB,YAAK,GAAG,CAAEJ,YAAY,CAACI,KAAM,CAAC,SAAS,CAAC,UAAU,CAAC,GAAG,CAAC,cAAc,EAAE,CAEzEJ,YAAY,CAACK,QAAQ,eACrB,KAAC,aAAa,EACZ,QAAQ,wBAAEL,YAAY,CAACK,QAAQ,+DAAI,EAAG,CACtC,UAAU,CAAE,CACVC,IAAI,qBAAwB,IAAtBC,UAAS,OAATA,SAAS,CAAEC,QAAQ,OAARA,QAAQ,CACvB,mBACE,aAAM,SAAS,CAAED,SAAU,UACxBC,QAAQ,EACJ,CAEX,CACF,CAAE,EACF,GAEA,GApBmGR,YAAY,CAACG,EAAE,CAqBpH,EACP,CAAC,EACE,CAEV,CAAC,CAED,cAAeR,mBAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}